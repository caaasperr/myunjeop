[
    {
      "id": 0,
      "title": "나의 첫 배포 - 1",
      "content": "나는 지금까지 코딩을 하면서 배포를 한번도 해본적이 없었다\n2학기 시간이 남는 지금, 이 시간을 이용해서 한번 배포를 해봐야겠다고 마음먹고 리액트를 간단히 공부한 뒤에 배포에 초점을 맞추고 프로젝트를 진행했다. \n 진행 후 느낀점은, 배포는 코딩과는 또 다른 어려움을 가지고 있다는 것을 알았다. 원래 백엔드는 vercel을 사용해서 배포하려했지만 \n 라이브러리가 잡히지 않는 문제가 있었고, 또한 vercel 무료 사양이 집에 있는 라즈베리파이와 차이가 크게 나지 않는 것을 보고 \n 집에 굴러다니던 라즈베리파이 3B+를 사용해서 배포를 진행했다. 프론트엔드는 깃헙 페이지를 사용했다. \n\n 문제점 \n 1. 포트포워딩을 하는데 집에서 2중 공유기를 사용중이기 때문에 살짝 까다로웠다. \n2. 개발 서버와 배포 서버는 다르다. 테스트 할때는 flask 내장 서버를 사용했지만 배포때는 Nginx와 gunicorn을 사용해서 배포를 진행했다.\n 이 과정에서 gunicorn과 nginx를 연결하는 중 도메인 적용할때 어려움을 겪었다.\n3. 홈서버의 램 문제 나는 라즈베리파이를 사용해서 배포하였기 때문에 램 용량이 1GB로 한정적이었다. \n따라서 램 용량을 크게 잡아먹지 않게 하기 위해서 백엔드를 최대한 가볍게 만드려고 했다. \n\n 결론\n 이번 프로젝트는 총 개발시간보다 배포시간이 많이 들었다 그러나 이를 통해서 네트워크 구조나 배포 과정 등 여러 가지를 배웠다. \n 시간이 남는 학생이라면 한번 거창한 서비스를 만들기보다 작은 서비스를 배포해보는것도 좋다고 생각한다.",
      "author": "Site-owner",
      "date": "2024-09-23"
    },
    {
      "id": 1,
      "title": "나의 첫 배포 - 2 (Gunicorn & Nginx연결)",
      "content": "여러 검색을 통해 실제 서비스 배포때는 Flask 내장 서버가 아니라 uWSGI나 Gunicorn을 사용한다는 것을 알았다. \n 나는 Gunicorn을 사용했고 외부 아이피로 들어갔을 떄 잘 작동했다. 그러나 Nginx를 도메인과 연결하고, 그 도메인으로 들어갔을 때\n 502에러가 나왔다. 원래 gunicorn.sock파일로 연결했었지만, 아이피로 연결하게 바꾸고 어짜피 정적 파일을 호스팅하지는 않을 것 같아서\n웹 인터페이스로 편하게 보려고 Nginx proxy manager를 설치해 사용했고, 완벽하게 동작했다. \n 실제 서비스를 하고 있는 지금은 Gunicorn 로그에 RAM관련 문제가 뜨는 것 같아서 이를 해결하기 위해 N100정도의 컴퓨터로 서버를 바꿔야 하나라는 생각이 든다.\n실제 업무 상황에서 배포를 어떻게 하는지는 모르지만, 공부용 만으로도 혼자 서버에 배포를 하는것을 여러 방면에 도움이 될 것 같다. \n다음 목표는 Docker을 사용해서 배포를 해 보는 것인데 Docker는 사용해 본 적이 없어서 시간이 조금 더 걸릴 것 같다.",
      "author": "Site-owner",
      "date": "2024-09-24"
    }, 
    {
      "id": 2,
      "title": "나의 첫 배포 - 3 (홈서버 사용 이유)",
      "content": "AWS나 기타 클라우드 서비스를 사용하면 집에서 서버를 굳이 돌릴 필요가 없는데 왜 홈서버를 선택했을까?\n첫번째 이유는 그냥 홈서버가 갖고싶었다. 집에서 놀고 있는 라즈베리파이도 있었고, 예전부터 홈서버에 대한 로망이 있었어서\n이번 기회에 실제로 서비스를 하고 있는 서버를 가지게 되었다.\n두번째 이유는, AWS나 Netlify를 사용하다가 DDoS 공격이나 트래픽이 너무 많을 때의 요금이 두려워서 홈 서버를 선택했다.\n어떤 사례들을 보면 가끔 공격당한 요금이 수백만원 단위까지 나오는 것을 보고, 전기세를 좀 포기하고 집에서 돌려야겠다고 생각을 했다.\n원래는 Mac mini나 N100 미니피시를 사려고 했지만, 가격이 가격이고 아직은 오버스펙인 감이 있어서, 또한 지금 백엔드 서버가 성능에 비해 너무 무거운 것도 아니라 나중에 트래픽이 늘면 그때가서 한번 바꿔야 겠다는 생각이다.\n또한 전기세 아끼려고 최대한 프로그램을 가볍게 만들고 관련 기술을을 찾아보는게 공부가 상당히 된다. 이러한 것도 장점이라 할 수 있나.",
      "author": "Site-owner",
      "date": "2024-09-25"
    }, 
    {
      "id": 3,
      "title": "나의 첫 배포 - 4 (이 프로그램을 만든 이유)",
      "content": "지금 고3이다. 6학종이고 그 중에서 4개가 면접이라 내가 준비하려고 만들었다. 그리고 React를 공부하다가\n간단한 아이디어가 만들기 좋을 것 같아 개발하는데 8시간정도만 든 것 같다. (배포하는데는 3일을 했지만)\n또한 사용자의 민감한 데이터를 저장하는 시스템이 아니라 보안적 지식이 많지 않은 상황에서도 운영할 수 있을 것 같아서 만들었다.\nGeminiAPI를 사용했다. 내 세특을 기반으로 프롬프트와 세팅을 맞추고, 실제 테스트를 상당히 많이 해서 꽤 괜찮은 결과물이 나왔다. \n 입력된 세특을 기반으로 주제에서 벗어나는 질문을 거의 하지도 않았으며 가끔 OOOO이 아주 많이 뜨는 오류가 있었지만 해결하였다. \n사실 지금까지도 조금 부끄럽다. 진짜 아무것도 없는 서비스를 이렇게 사람들에게 공개해도 되는건가, 일반인들은 이걸 보고 어떻게 생각할까, 개발 좀 해보면 아무것도 아니라는 것을 알텐데, 아직도 고민이다. 유저 안나오면 그냥 접을까 생각도 하고있다.",
      "author": "Site-owner",
      "date": "2024-09-25"
    }, 
    {
      "id": 4,
      "title": "나의 첫 배포 - 5 (검색엔진에 나오게 하기)",
      "content": "도메인을 직접 칠정도로 유명한 서비스가 아니면 거의 다 검색엔진을 통해 들어올 것이므로, 이를 설정해야한다.\n그냥 네이버 서치어드바이저랑 구글 서치콘솔에 등록했는데, 또 심사를 하고, sitemap과 robots.txt를 등록해야하고, \n여기까지가 끝인줄 알았는데, 또 2일인가가 소요되었다. 실제 표시되는데까지. \n 그리고 오늘 표시가 되는것을 확인했는데 찾아보니까 5페이지까지 가야지 보이더라, 이걸 어떻게 하면 올릴 수 있을지에 관해서 지금 생각중이다. 친구들을 통해서 프로그램을 퍼뜨려야 하나 아니면 어디에 광고라도 맡겨야 하나 생각중이다. \n 아직 네이버는 쳐도 안나오더라.",
      "author": "Site-owner",
      "date": "2024-09-25"
    }, 
    {
      "id": 5,
      "title": "나의 첫 배포 - 6 (애드핏 설정 나오게 하기)",
      "content": "애드핏을 오늘 설정했다. 애드센스를 기다리다가 면접 기간이 끝나도 심사가 제대로 될 것 같지 않아서 애드핏으로 현재는 운영을 하고 있다\n애드핏보다는 애드센스가 단가가 훨씬 높다는데 API값 유지비정도는 나와야 제대로 운영을 할 수 있는데 (세특이 아주 길어서 토큰이 많이 나옴) 어제 첫 애드핏 적립금은 2원이었다. 그래도 어떤 모르는 사람이 눌러주기라도 해서 이정도가 나왔지, 클릭도 안되었으면 돈은 아예 받지도 못했을 것이다. 근데 신기한게 \n 애드핏은 심사가 올라가자마자 바로 통과 되었다는 것이다. 애드센스는 단가가 아무래도 높으니까 심사를 빡세게 해서 어뷰징을 방지하는 목적이지 싶다. \n 빨리 문제점을 찾아서 애드센스도 등록을 해야하는데, 될 가능성이 아직까진 잘 보이지 않는 것 같다. 오늘도 수정을 해서 내일쯤 심사를 한번 또 맡겨볼 예정이다.",
      "author": "Site-owner",
      "date": "2024-09-25"
    }, 
    {
      "id": 6,
      "title": "나의 첫 배포 - 7 (소감)",
      "content": "이번 프로젝트를 배포하면서 정말 많은 걸 배웠다.\n처음엔 모든 게 순조로울 거라 생각했지만, 실제 배포 과정에서 예상치 못한 문제들이 계속해서 발생했다.\n특히 로컬 환경에서는 잘 작동하던 코드가 서버에서 오류를 일으키는 걸 보면서, 배포와 서비스 운영이 얼마나 복잡한지 실감했다.\n디버깅하고 로그를 분석하는 과정에서 문제 해결 능력의 중요성을 다시 한 번 깨달았다.\n또한, 사용자 입장에서 더 나은 경험을 제공하려면 어떤 부분을 개선해야 할지 고민하게 됐다.\n다양한 기술 스택을 활용하면서 개발 실력을 쌓았고, 서버 관리 능력도 늘었다.\n이번 경험을 통해 앞으로 더 효율적이고 견고한 코드를 작성하고, 배포 과정에서 발생할 수 있는 문제들을 미리 대비할 수 있도록 노력해야겠다는 다짐을 하게 됐다.",
      "author": "Site-owner",
      "date": "2024-09-25"
    }, 
    {
      "id": 7,
      "title": "나의 첫 배포 - 8 (잡담)",
      "content": "이전보다는 확실히 코딩 실력이나 관련 능력이 늘은 것 같다. 초등학교 5학년때 처음 시작해서 텍스트 코딩 한번 해보고 싶다고\n서적도 도서관에서 빌려서 이해도 못하는 것을 따라치고 했었는데, 이제는 쉽지만 엄연한 서비스 하나를 운영할 수 있다니, 참 신기하다\n다음으로 진행할 2개의 프로젝트가 있는데(사실 먼저 만들고 있었음) 이 프로젝트 배포 경험을 바탕으로 다음 두 프로젝트는 \n 큰 문제 없이 잘 넘어갔으면 좋겠다. 그리고 이제부터 할 것은 사이트를 어떻게 마케팅을 해야하나가 궁금하다. \n 구글에서도 상위에 안뜨는데 이걸 해결하고, 이 망망대해같은 인터넷에서 내 서비스를 어떻게 어필을 해야하는지를 공부할 예정이다. 애초에 서비스 트래픽이랑 이용률이 높아야 \n 검색 엔진에서 상위권을 유지할 수 있으니까.",
      "author": "Site-owner",
      "date": "2024-09-25"
    }
    , 
    {
      "id": 8,
      "title": "나의 첫 배포 - 9 (조언)",
      "content": "학생 개발자로서 중요한 건 기초를 튼튼히 다지는 것이다.\n언어의 문법이나 알고리즘 같은 기본기를 확실히 익혀야, 이후에 새로운 기술을 배울 때도 빠르게 적응할 수 있다.\n또한, 프로젝트 경험을 많이 쌓는 게 중요하다.\n책이나 강의로만 배우는 것보다 실제로 코드를 작성하고 문제를 해결하는 과정에서 더 많은 걸 배울 수 있다.\n협업 경험도 꼭 가져보길 권한다.\n혼자서 개발하는 것과 팀으로 함께하는 건 많이 다르다.\nGit 같은 협업 도구도 익숙해질 필요가 있다.\n마지막으로, 포기하지 않는 끈기가 필요하다.\n문제에 부딪혔을 때 쉽게 지치지 말고, 꾸준히 해결하려는 노력이 장기적인 성장에 큰 도움이 된다.",
      "author": "Site-owner",
      "date": "2024-09-25"
    }, 
    {
      "id": 9,
      "title": "헛소리",
      "content": "진로를 미리 찾는 건 정말 중요하다.\n가능한 많은 경험을 통해 자신이 좋아하는 분야와 적성에 맞는 길을 찾는 게 필요하다.\n특히, 여러 분야를 탐구하면서 관심 있는 것과 없는 것을 구분해 보는 게 좋다.\n인터넷 강의, 책, 멘토링 등을 활용해 다양한 분야의 지식을 접하고, 실제로 그 분야에서 활동하는 사람들의 이야기를 듣는 것도 큰 도움이 된다.\n작은 프로젝트나 인턴십 기회를 통해 실무 경험을 쌓아보면 자신에게 맞는지 판단하기 더 쉬울 것이다.\n진로는 한 번에 정하는 게 아니라 여러 번의 탐색과 경험을 통해 점차 구체화되는 것이니 조급해하지 말고 꾸준히 탐구하는 자세가 중요하다.",
      "author": "Site-owner",
      "date": "2024-09-25"
    }
]